@model School
@{
    ViewData["Title"] = "EditSchool";
    Layout = "~/Views/Shared/_LayoutAdminNew.cshtml";
    string lang = Context.Request.Cookies["lang"];
}


<div class="row mb-5">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-primary">
                <h4 class="card-title">@Localization.GetTranslate("school", lang).ToUpper() (@Localization.GetTranslate("edit", lang).ToUpper())</h4>
            </div>
            <div class="card-body">
                <form method="post">

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("region", lang).ToUpper()</label>
                                <select class="custom-select" name="RegionId" id="Regions" required>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("district", lang).ToUpper()</label>
                                <select class="custom-select" name="DistrictId" id="Districts" value="@Model.DistrictId" required>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("school_type", lang).ToUpper()</label>
                                <select class="custom-select" name="TypeId" id="SchoolTypes" value="@Model.TypeId" required>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("name_uz", lang).ToUpper()</label>
                                <input type="text" class="form-control" name="NameUz" value="@Model.NameUz" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("name_uzk", lang).ToUpper()</label>
                                <input type="text" class="form-control" name="NameUzk" value="@Model.NameUzk" required>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("name_ru", lang).ToUpper()</label>
                                <input type="text" class="form-control" name="NameRu" value="@Model.NameRu" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("name_en", lang).ToUpper()</label>
                                <input type="text" class="form-control" name="NameEn" value="@Model.NameEn" required>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("school_number", lang).ToUpper()</label>
                                <input type="number" class="form-control" name="Number" value="@Model.Number">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("director", lang).ToUpper()</label>
                                <input type="text" class="form-control" name="Director" value="@Model.Director">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("phone_number", lang).ToUpper()</label>
                                <input type="tel" class="form-control" name="Phone" id="phone" value="@Model.Phone">
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-12">
                            <div id="mapholder" style="width: 100%; height: 400px">

                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label class="bmd-label-floating">@Localization.GetTranslate("address", lang).ToUpper()</label>
                                <input type="text" class="form-control" name="Address" id="address" value="@Model.Address" />
                            </div>
                        </div>

                        <input type="hidden" class="form-control" name="Latitude" id="Latitude" value="@Model.Latitude" />
                        <input type="hidden" class="form-control" name="Longtitude" id="Longtitude" value="@Model.Longtitude" />

                    </div>
                    <button type="submit" class="btn btn-primary ">@Localization.GetTranslate("save", lang).ToUpper()</button>
                    <button type="button" class="btn btn-secondary " onclick="window.location.href='/Admin/Schools/'">@Localization.GetTranslate("back", lang).ToUpper()</button>
                    <div class="clearfix"></div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>

    $(function () {
        $("#phone").inputmask({ "mask": "+\\9\\98(99) 999-9999" });
    })

    $(document).ready(function () {
        $.getJSON("/GetApi/GetRegions/", function (result) {
            var $dropdown = $("#Regions");
            $dropdown.append($("<option />").val(null).text("@Html.Raw(Localization.GetTranslate("select...", lang).ToUpper())"));
            var $dropdown2 = $("#Districts");
            $dropdown2.append($("<option />").val(null).text("@Html.Raw(Localization.GetTranslate("select...", lang).ToUpper())"));
            $.each(result, function () {
                if (this.id == @Model.RegionId) {
                    $dropdown.append($("<option selected />").val(this.id).text(this.name_uz));
                }
                else {
                    $dropdown.append($("<option />").val(this.id).text(this.name_uz));
                }
            });
        });

        $.getJSON("/GetApi/GetDistricts/" + @Model.RegionId, function (result) {
            var $dropdown = $("#Districts");
            $.each(result, function () {
                if (this.id == @Model.DistrictId) {
                    $dropdown.append($("<option selected />").val(this.id).text(this.name_uz));
                }
                else {
                    $dropdown.append($("<option />").val(this.id).text(this.name_uz));
                }
            });
        });

        $("#Regions").change(function () {
            var region = this.value;
            $('#Districts').empty();
            $.getJSON("/GetApi/GetDistricts/" + region, function (result) {
                var $dropdown = $("#Districts");
                $dropdown.append($("<option />").val(null).text("@Html.Raw(Localization.GetTranslate("select...", lang).ToUpper())"));
                $.each(result, function () {
                    $dropdown.append($("<option />").val(this.id).text(this.name_uz));
                });
            });
        });

        $.getJSON("/GetApi/GetSchoolTypes/", function (result) {
            var $dropdown = $("#SchoolTypes");
            $dropdown.append($("<option />").val(null).text("@Html.Raw(Localization.GetTranslate("select...", lang).ToUpper())"));
            $.each(result, function () {
                if (this.id == @Model.TypeId) {
                    $dropdown.append($("<option selected />").val(this.id).text(this.nameUz));
                }
                else {
                    $dropdown.append($("<option />").val(this.id).text(this.nameUz));
                }
            });
        });
    });

    ymaps.ready(init);

    function init() {
        var myMap = new ymaps.Map("mapholder", {
            center: [@Model.Latitude, @Model.Longtitude],
            zoom: 17,
        },
        {
            suppressMapOpenBlock: true
        },
        {
            searchControlProvider: 'yandex#search'
        });

        myPlacemark = createPlacemark([@Model.Latitude, @Model.Longtitude]);
        myMap.geoObjects.add(myPlacemark);
        myPlacemark.events.add('dragend', function () {
            getAddress(myPlacemark.geometry.getCoordinates());
        });
        getAddress([@Model.Latitude, @Model.Longtitude]);

        myMap.events.add('click', function (e) {
            var coords = e.get('coords');
            document.getElementById("mapholder").value = coords;
            myPlacemark.geometry.setCoordinates(coords);
            getAddress(coords);
            document.getElementById("Latitude").value = coords[0];
            document.getElementById("Longtitude").value = coords[1];
        });

        function createPlacemark(coords) {
            return new ymaps.Placemark(coords, {
                iconCaption: 'поиск...'


            }, {
                preset: 'islands#blueDotIconWithCaption',
                draggable: true
            });
        }

        function getAddress(coords) {
            myPlacemark.properties.set('iconCaption', 'поиск...');
            ymaps.geocode(coords).then(function (res) {
                var firstGeoObject = res.geoObjects.get(0);

                myPlacemark.properties
                    .set({
                        iconCaption: [
                            firstGeoObject.getLocalities().length ? firstGeoObject.getLocalities() : firstGeoObject.getAdministrativeAreas(),
                            firstGeoObject.getThoroughfare() || firstGeoObject.getPremise()
                        ].filter(Boolean).join(', '),
                        balloonContent: firstGeoObject.getAddressLine()
                    });
                document.getElementById("address").value = firstGeoObject.getAddressLine();
                document.getElementById("Latitude").value = coords[0];
                document.getElementById("Longtitude").value = coords[1];
            });
        }
    }


</script>