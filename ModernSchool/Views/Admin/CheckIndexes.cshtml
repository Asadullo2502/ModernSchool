@model PageData
@{
    ViewData["Title"] = "Indexes";
    Layout = "~/Views/Shared/_LayoutAdminNew.cshtml";
    string lang = Context.Request.Cookies["lang"];
    int j = 1;
}

<style>
    
    .school-block-wrapper {
   display: flex;
   align-items: center;
   justify-content: space-between;
}



.school-block {
   cursor: pointer;
   display: flex;
   flex-direction: column;
   background: transparent;
   border-radius: 10px;
   padding: 1rem;
   min-height: 70px;
   width: calc(100% / 4 - 10px);
   margin-right: 10px;
   transition: all ease 0.5s;
}



.school-block.active {
   box-shadow: 0 0.46875rem 2.1875rem rgb(4 9 20 / 3%),
   0 0.9375rem 1.40625rem rgb(4 9 20 / 3%),
   0 0.25rem 0.53125rem rgb(4 9 20 / 5%),
   0 0.125rem 0.1875rem rgb(4 9 20 / 3%);
   background: #ffffff;
   transition: all ease 0.5s;
}
.school-block.active .school-block-top-center {
   transition: all ease 0.5s;
   color: #028CCE;
}
.school-block:hover {
   box-shadow: 0 0.46875rem 2.1875rem rgb(4 9 20 / 3%),
   0 0.9375rem 1.40625rem rgb(4 9 20 / 3%),
   0 0.25rem 0.53125rem rgb(4 9 20 / 5%),
   0 0.125rem 0.1875rem rgb(4 9 20 / 3%);
   background: #ffffff;
   transition: all ease 0.5s;
}
.school-block:hover .school-block-top-center {
   transition: all ease 0.5s;
   color: #028CCE;
}

.school-block-top {
   display: flex;
   align-items: flex-start;
   justify-content: space-between;
   width: 100%;
}

.school-block-top-left {
   width: 30px;
   height: 30px;
   display: flex;
   align-items: center;
   justify-content: center;
   border: 3px solid #68AF91;
   box-sizing: border-box;
   border-radius: 50%;
}
.school-block-top-left span{
   display: flex;
   align-items: center;
   justify-content: center;
   color: #68AF91;
}

.school-block-top-center {
   width: 60%;
   color: #B1B5B8;
   margin-left: 10px;
   font-size: 13px;
   font-weight: bold;
   transition: all ease 0.5s;
   min-height: 40px;
   max-height: 40px;
   overflow: hidden;
}


.school-block-top-right {
   color: #fff;
   font-size: 12px;
   font-weight: bold;
   width: 40px;
   height: 15px;
   padding: 5px 10px;
   display: flex;
   text-align: center;
   align-items: center;
   justify-self: center;  
   border-radius: 40px;
   box-sizing: content-box;
}
.school-block-top-right span{
   width: 100%;
}

.progressBar {
   width: 100%;
   display: flex;
   align-items: center;
   justify-content: flex-start;
   margin-top: 20px;
   background: #CCCCCC;
   border-radius: 40px;
   position: relative;
   height: 10px;
}

.progressBar .ver {
   position: absolute;
   left: 0;
   color: white;
   background: #028CCE;
   width: 20px;
   height: 20px;
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 12px;
   border-radius: 50%;
   padding: 2px;
   z-index: 2;
}

.progressBar .prog {
   position: absolute;
   left: 0;
   height: 100%;
   width: 50%;
   background: #028CCE;
   border-radius: 40px;
}

.school-block-child-wrapper {
   margin-top: 20px;
   display: flex;
   justify-content: space-between;
   width: 100%;
   position: relative;
}

.school-block-child-top {
   display: flex;
   align-items: flex-start;
   justify-content: space-between;
   width: 100%;
}

.school-block-child {
    max-height: 120px;
    overflow-y: hidden;
   width: calc(100%  - 10px);
   box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px,
   rgba(0, 0, 0, 0.23) 0px 3px 6px;
   cursor: pointer;
   display: flex;
   flex-direction: column;
   background: transparent;
   border-radius: 10px;
   padding: 1rem;
   min-height: 120px;
   margin-right: 10px;
   transition: all ease 0.5s;
   background: #ffffff url('/img/book.svg');
   background-repeat: no-repeat;
   background-size: 90px;
   background-position: right -2% bottom -10px;
}



 .school-block-child .school-block-child-top .school-block-child-left {
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 3px solid #68AF91;
    box-sizing: border-box;
    border-radius: 50%;
 }

 .school-block-child .school-block-child-top .school-block-child-left span {
    display: flex;
    align-items: center;
    justify-content: center;
    color: #68AF91;
 }

 .school-block-child .school-block-child-top .school-block-child-right {
    background: #DCF9FD;
    color: #7EB8DA;
    font-size: 12px;
    font-weight: bold;
    min-width: 40px;
    height: 15px;
    padding: 5px 10px;
    display: flex;
    text-align: center;
    align-items: center;
    justify-self: center;
    border-radius: 40px;
    box-shadow: none;
    box-sizing: content-box;
 }

 .school-block-child-right span {
    width: 100%;
 }

 .school-block-child-center {
    width: 75%;
    color: #757188;
    font-weight: normal;
    margin-top: 12px;
    font-size: 15px;
    display: flex;
    overflow-y: scroll;
 }

 .school-block-child-center span {
    font-size: 24px;
    color: white;
    margin-right: 20px;
    display: none;
 }


.school-block-child .school-block-child-bottom {
   display: none;
}

.school-block-child.active {
   width: 250%;
   height: 118px;
   background:url('/img/book.svg') #028CCE;
   background-repeat: no-repeat;
   background-size: 120px;
   background-position: right 30px bottom 50%;
   min-height: 140px;
   max-height: 140px;
   box-shadow: none;
}
.school-block-child.active > .school-block-child-center {
   font-size: 24px;
   color: white;
   margin-top: 0;
   
}


.school-block-child-center::-webkit-scrollbar {
   width: 0;
}

.school-block-child-center::-webkit-scrollbar-track {
   background: transparent;
}

.school-block-child-center::-webkit-scrollbar-thumb {
   background-color: transparent;
   border-radius: 6px;
   border: 3px solid transparent;
}
.school-block-child.active>.school-block-child-top .school-block-child-left {
   display: none;
}
.school-block-child.active>.school-block-child-top  {
   justify-content: flex-end;
}
.school-block-child.active>.school-block-child-top .school-block-child-right {
   font-size: 18px;
   box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px,
   rgba(0, 0, 0, 0.23) 0px 3px 6px; 
}
.school-block-child.active > .school-block-child-bottom {
   display: flex;
   width: 100%;
}
.school-block-child.active>.school-block-child-bottom > .school-block-child-wrapper {
   margin-top: 0;
   width: 100%;
   position: absolute;
   bottom: -160px;
   left: 0;
   right: 0;
   background: #028CCE;
   border-radius:10px;
   padding: 10px 10px 20px 10px;
   min-height: 170px;
    max-height: 170px;

}


.school-block-child.active > .school-block-child-center span {
  display: inline-flex;
}


.school-block-child.disabled {
   width: calc(30% - 10px);
   height: 100px;
   background: #ffff;
   box-sizing: border-box;
}
.school-block-child.disabled .school-block-child-top {
   flex-direction: column;
   align-items: center;
   justify-content: center;
   height: 100%;
}
.school-block-child.disabled .school-block-child-left {
   margin-bottom: 10px;
}
.school-block-child.disabled .school-block-child-center {
   display: none;
}

.school-block-child-wrapper {
   display: none;
}
.school-block-child-wrapper.active {
   display: flex;
}

.indexTitles {
    position: absolute;
    top: 120%;
    width: 100%;
    margin: 0 auto;
    left: 0;
}

</style>

<div class="school-block-wrapper">
    @foreach (var item in Model.Indexes.Where(x => x.Level == 1).OrderBy(x => x.OrderNumber))
    {
      <div class="school-block" onclick="level1click(@item.Id)">
         <div class="school-block-top">
            <div class="school-block-top-left">
               <b>@(lang == "ru" ? item.ShortName : item.ShortName)</b>
            </div>

            <div class="school-block-top-center">
                    @(lang == "ru" ? item.NameRu : item.NameUz)
            </div>

            <div class="school-block-top-right"
            style="background-color:@(Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id == item.Id).Selected == Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id == item.Id).Count ? "#4caf50" : "#f44336b0")"
            >
               <span>@(Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id == item.Id).Selected)/@(Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id == item.Id).Count)</span>
            </div>
         </div>

         <div class="progressBar">
            <span class="ver"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="12" height="12" viewBox="0 0 256 256" xml:space="preserve">
            <desc>Created with Fabric.js 1.7.22</desc>
                <defs>
            </defs>
        <g transform="translate(128 128) scale(0.72 0.72)" style="">
	        <g style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;" transform="translate(-175.05 -175.05000000000004) scale(3.89 3.89)" >
	        <path d="M 29.452 78.819 L 1.601 50.968 c -2.134 -2.134 -2.134 -5.595 0 -7.729 l 8.691 -8.691 c 2.134 -2.134 5.595 -2.134 7.729 0 l 13.058 13.058 c 1.236 1.236 3.239 1.236 4.475 0 l 36.425 -36.425 c 2.134 -2.134 5.595 -2.134 7.729 0 l 8.691 8.691 c 2.134 2.134 2.134 5.595 0 7.729 L 37.181 78.819 C 35.046 80.953 31.586 80.953 29.452 78.819 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: #fff; fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" />
        </g>
        </g>
        </svg></span>
            <span class="prog" style="width: @(Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id == item.Id).Selected *100 / Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id == item.Id).Count)%;"></span>
         </div>
      </div>
    }
</div>

 @foreach (var item in Model.Indexes.Where(x => x.Level == 1).OrderBy(x => x.OrderNumber)) {
    <div class="school-block-child-wrapper" id="index_@item.Id">
    @{
        GetSomeString(2, item.Id, 0, lang, j);
    }
    </div>
}

@functions {
    private async Task GetSomeString(int username, int item, int joe, string lang, int j)
    {
       @foreach (var item2 in Model.Indexes.Where(x => x.Level == username).OrderBy(x => x.OrderNumber)){
            @if(item == item2.ParentId){
                
                <div class="school-block-child">
                    @{
                        joe++;
                    }
                <div class="school-block-child-top">
                    <div class="school-block-child-left">
                        <b>@joe</b>
                    </div>
                    <div class="school-block-child-right">
                        <span>@(Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id ==
                                item2.Id).Selected)/@(Model.IndexesDataStatuses.FirstOrDefault(x=>x.Id == item2.Id).Count)
                        </span>
                    </div>
                    </div>

                    <div class="school-block-child-center">
                        <span>@(item2.ShortName)</span> @(lang == "ru" ? item2.NameRu : item2.NameUz)
                    </div>

                    <div class="school-block-child-bottom">
                        @if(item2.Criterias.Count > 0){
                             <div class="row indexTitle_@item2.Id indexTitles mt-3">
            <div class="col-12">
                <div class="card">
                    <div class="card-header" style="font-weight:700">@(lang == "ru" ? item2.NameRu : item2.NameUz)</div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6">
                                <h4 class="text-center">Maktab</h4>
                                <hr />
                                @foreach (var cr in item2.Criterias)
                                {
                                    if (cr.Type != "number")
                                    {
                                        try
                                        {
                                            if (Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueSchool != null).ValueSchool != null)
                                            {
                                                <div class="form-check mt-3 criterias indexCriterias_@cr.IndexId" id="">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input readonly" type="@cr.Type" criteriaId="@cr.Id" qw="@cr.MaxBall" @(Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueSchool != null).ValueSchool == cr.Id ? "checked" : "") value="@cr.Id" onclick="clickRadio(@cr.Id, @cr.IndexId, @cr.MaxBall.ToString().Replace(',', '.'))" />
                                                        @(lang == "ru" ? cr.NameRu : cr.NameUz)
                                                        <span class="@(cr.Type == "checkbox" ? "form-check-sign" : "circle")">
                                                            <span class="check"></span>
                                                        </span>
                                                    </label>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-check mt-3 criterias indexCriterias_@cr.IndexId" id="">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input readonly" type="@cr.Type" criteriaId="@cr.Id" qw="@cr.MaxBall" value="@cr.Id" onclick="clickRadio(@cr.Id, @cr.IndexId, @cr.MaxBall.ToString().Replace(',', '.'))" />
                                                        @(lang == "ru" ? cr.NameRu : cr.NameUz)
                                                        <span class="@(cr.Type == "checkbox" ? "form-check-sign" : "circle")">
                                                            <span class="check"></span>
                                                        </span>
                                                    </label>
                                                </div>
                                            }
                                        }
                                        catch
                                        {
                                            <div class="form-check mt-3 criterias indexCriterias_@cr.IndexId" id="">
                                                <label class="form-check-label">
                                                    <input class="form-check-input readonly" type="@cr.Type" criteriaId="@cr.Id" qw="@cr.MaxBall" value="@cr.Id" onclick="clickRadio(@cr.Id, @cr.IndexId, @cr.MaxBall.ToString().Replace(',', '.'))" />
                                                    @(lang == "ru" ? cr.NameRu : cr.NameUz)
                                                    <span class="@(cr.Type == "checkbox" ? "form-check-sign" : "circle")">
                                                        <span class="check"></span>
                                                    </span>
                                                </label>
                                            </div>
                                        }

                                    }
                                    else
                                    {
                                        try
                                        {
                                            if (Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueSchool != null).ValueSchool != null)
                                            {
                                                <div class="form-group mt-3 criterias indexCriterias_@cr.IndexId">
                                                    <label for="criteriaId_@cr.Id">@(lang == "ru" ? cr.NameRu : cr.NameUz)</label>
                                                    <input type="@cr.Type" class="form-control readonly" criteriaId="@cr.Id" qw="@cr.MaxBall" value="@Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueSchool != null).ValueSchool" min="0">
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-group mt-3 criterias indexCriterias_@cr.IndexId">
                                                    <label for="criteriaId_@cr.Id">@(lang == "ru" ? cr.NameRu : cr.NameUz)</label>
                                                    <input type="@cr.Type" class="form-control readonly" criteriaId="@cr.Id" qw="@cr.MaxBall" min="0">
                                                </div>
                                            }
                                        }
                                        catch
                                        {
                                            <div class="form-group mt-3 criterias indexCriterias_@cr.IndexId">
                                                <label for="criteriaId_@cr.Id">@(lang == "ru" ? cr.NameRu : cr.NameUz)</label>
                                                <input type="@cr.Type" class="form-control readonly" criteriaId="@cr.Id" qw="@cr.MaxBall" min="0">
                                            </div>
                                        }

                                    }
                                }
                            </div>
                            <div class="col-6">
                                <h4 class="text-center">Nazoratchi</h4>
                                <hr />
                                @foreach (var cr in item2.Criterias)
                                {
                                    if (cr.Type != "number")
                                    {
                                        try
                                        {
                                            if (Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueInspektor != null).ValueInspektor != null)
                                            {
                                                <div class="form-check mt-3 criterias indexCriteriasInsp_@cr.IndexId" id="">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" type="@cr.Type" name="criteriaIndexId_@cr.IndexId" criteriaId="@cr.Id" qw="@cr.MaxBall" id="criteriaId_@cr.Id" @(Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueInspektor != null).ValueInspektor == cr.Id ? "checked" : "") value="@cr.Id" onclick="clickRadio(@cr.Id, @cr.IndexId, @cr.MaxBall.ToString().Replace(',', '.'))" />
                                                        @(lang == "ru" ? cr.NameRu : cr.NameUz)
                                                        <span class="@(cr.Type == "checkbox" ? "form-check-sign" : "circle")">
                                                            <span class="check"></span>
                                                        </span>
                                                    </label>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-check mt-3 criterias indexCriteriasInsp_@cr.IndexId" id="">
                                                    <label class="form-check-label">
                                                        <input class="form-check-input" type="@cr.Type" name="criteriaIndexId_@cr.IndexId" criteriaId="@cr.Id" qw="@cr.MaxBall" id="criteriaId_@cr.Id" value="@cr.Id" onclick="clickRadio(@cr.Id, @cr.IndexId, @cr.MaxBall.ToString().Replace(',', '.'))" />
                                                        @(lang == "ru" ? cr.NameRu : cr.NameUz)
                                                        <span class="@(cr.Type == "checkbox" ? "form-check-sign" : "circle")">
                                                            <span class="check"></span>
                                                        </span>
                                                    </label>
                                                </div>
                                            }
                                        }
                                        catch
                                        {
                                            <div class="form-check mt-3 criterias indexCriteriasInsp_@cr.IndexId" id="">
                                                <label class="form-check-label">
                                                    <input class="form-check-input" type="@cr.Type" name="criteriaIndexId_@cr.IndexId" criteriaId="@cr.Id" qw="@cr.MaxBall" id="criteriaId_@cr.Id" value="@cr.Id" onclick="clickRadio(@cr.Id, @cr.IndexId, @cr.MaxBall.ToString().Replace(',', '.'))" />
                                                    @(lang == "ru" ? cr.NameRu : cr.NameUz)
                                                    <span class="@(cr.Type == "checkbox" ? "form-check-sign" : "circle")">
                                                        <span class="check"></span>
                                                    </span>
                                                </label>
                                            </div>
                                        }

                                    }
                                    else
                                    {
                                        try
                                        {
                                            if (Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueInspektor != null).ValueInspektor != null)
                                            {
                                                <div class="form-group mt-3 criterias indexCriteriasInsp_@cr.IndexId">
                                                    <label for="criteriaId_@cr.Id">@(lang == "ru" ? cr.NameRu : cr.NameUz)</label>
                                                    <input type="@cr.Type" class="form-control" id="criteriaId_@cr.Id" criteriaId="@cr.Id" qw="@cr.MaxBall" name="criteriaIndexId_@cr.IndexId" value="@Model.Rates.FirstOrDefault(x => x.CriteriaId == cr.Id && x.ValueInspektor != null).ValueInspektor" min="0">
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-group mt-3 criterias indexCriteriasInsp_@cr.IndexId">
                                                    <label for="criteriaId_@cr.Id">@(lang == "ru" ? cr.NameRu : cr.NameUz)</label>
                                                    <input type="@cr.Type" class="form-control" id="criteriaId_@cr.Id" criteriaId="@cr.Id" qw="@cr.MaxBall" name="criteriaIndexId_@cr.IndexId" min="0">
                                                </div>
                                            }
                                        }
                                        catch
                                        {
                                            <div class="form-group mt-3 criterias indexCriteriasInsp_@cr.IndexId">
                                                <label for="criteriaId_@cr.Id">@(lang == "ru" ? cr.NameRu : cr.NameUz)</label>
                                                <input type="@cr.Type" class="form-control" id="criteriaId_@cr.Id" criteriaId="@cr.Id" qw="@cr.MaxBall" name="criteriaIndexId_@cr.IndexId" min="0">
                                            </div>
                                        }

                                    }
                                }
                            </div>
                        </div>
                        
                        <div class="footer mt-5" style="text-align:right">
                            <input type="button" class="btn btn-primary" value="@Localization.GetTranslate("save", lang).ToUpper()" onclick="SaveData(@item2.Id)" />
                            <input type="button" class="btn btn-light" value="@Localization.GetTranslate("reset", lang).ToUpper()" onclick="Reset(@item2.Id)" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 mt-3 mb-3">
                <div class="card">
                    <div class="card-header">
                        Yuklangan fayllar
                    </div>
                    <div class="card-body">
                        <div id="refDiv_@item2.Id">
                            <div class="row">
                                @{ j = 1; }
                                @foreach (var files in Model.UploadFiles.Where(x => x.IndexId == item2.Id))
                                {
                                    <div class="col-12 mb-1">
                                        <a target="_blank" href="~/uploads/@files.FileGuid">@j.  @files.FileName</a>
                                        <button class="btn btn-warning btn-sm" data-toggle="modal" data-target="#exampleModal" onclick="deleteUploadFile(@files.Id,@item2.Id)"><span class="fa fa-trash-alt"></span></button>
                                    </div>
                                    j++;
                                }
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-4">
                                <label class="btn btn-light" for="fileUpload_@item2.Id" style="margin-bottom:0px">
                                    <input id="fileUpload_@item2.Id" type="file" style="display:none"
                                           onchange="$('#upload-file-info_@item2.Id').text(this.files[0].name)">
                                    Faylni tanlang
                                </label>
                                <span class='label label-info' id="upload-file-info_@item2.Id"></span>
                                <button class="btn btn-primary" id="btnUpload" type="button" onclick="uploadFile(@item2.Id)">
                                    Faylni saqlash
                                </button>
                                <button class="btn btn-primary" id="btnUpload2" type="button" disabled style="display:none">
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    Faylni saqlash
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
                        }else {
                            <div class="school-block-child-wrapper" id="index_@item2.Id" style="display: flex;">
                                @{
                                    GetSomeString(username + 1, item2.Id, 0, lang, j);
                                }
                            </div>
                        }
                    </div>
                </div>
            } 
        } 
    }
}


   



<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Faylni o`chirish</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                O`chirilgan fayllar tiklanmaydi
                <input type="hidden" id="deletedFileId" />
                <input type="hidden" id="refDivId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Ortga</button>
                <button type="button" class="btn btn-primary" onclick="confirmDeleteUploadFile()">O`chirish</button>
            </div>
        </div>
    </div>
</div>

<script>
    $('#exampleModal').appendTo("body");
    function deleteUploadFile(id,id2) {
        $('#deletedFileId').val(id);
        $('#refDivId').val(id2);
    };
    function confirmDeleteUploadFile() {
        var refDivId = $('#refDivId').val();
        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteUploadFile", "Admin")',
            data: { "id": $('#deletedFileId').val() },
		    success: function (repo) {
			    if (repo.status == "success") {
                    toastr.success("Fayl o`chirildi!", "", {
                        "timeOut": "2500",
                        "extendedTImeout": "0"
                    });
                }
                $('#refDiv_' + refDivId).load('@Url.Action("CheckIndexes", "Admin")' + ' #refDiv_' + refDivId);
                $("#exampleModal .close").click();
		    },
		    error: function() {
			    alert("Error occurs");
		    }
	    });
    };


    var $loading = $('#btnUpload');
    var $loading2 = $('#btnUpload2').hide();

    $(document)
        .ajaxStart(function () {
            $loading2.show();
            $loading.hide();
        })
        .ajaxStop(function () {
            $loading.show();
            $loading2.hide();
        });


    function uploadFile(id) {
        var files = $('#fileUpload_' + id).prop("files");
	    var url = '@Url.Action("OnPostMyUploader", "Admin")';
	    formData = new FormData();
	    formData.append("MyUploader", files[0]);
        formData.append("IndexId", id);

	    jQuery.ajax({
		    type: 'POST',
		    url: url,
		    data: formData,
		    cache: false,
		    contentType: false,
		    processData: false,
		    beforeSend: function (xhr) {
			    xhr.setRequestHeader("XSRF-TOKEN",
				    $('input:hidden[name="__RequestVerificationToken"]').val());
		    },
		    success: function (repo) {
			    if (repo.status == "success") {
                    toastr.success("Maʼlumotlar saqlandi!", "", {
                        "timeOut": "2500",
                        "extendedTImeout": "0"
                    });
                }
                $('#refDiv_' + id).load('@Url.Action("CheckIndexes", "Admin")' + ' #refDiv_' + id);
                $('#fileUpload_' + id).val('');
                $('#upload-file-info_' + id).text('');
		    },
		    error: function() {
			    alert("Error occurs");
		    }
	    });
    };
</script>

<script>
    

    let GlobalBlock = document.querySelectorAll('.school-block')

    GlobalBlock.forEach(el => {
        el.addEventListener('click', () => {
            GlobalBlock.forEach(el1=> {
                el1.classList.remove('active')
            })
          el.classList.toggle('active')
        })
    })
    function level1click(id) {
        let schoolBlocks = document.querySelectorAll('.school-block-child-wrapper')
        schoolBlocks.forEach(el => {
            el.classList.remove('active')
        })


        $("#index_" + id).addClass('active');

       
    }
    let block2 = document.querySelectorAll('.school-block-child')
    block2.forEach(el => {
   
   el.addEventListener('click', (event) => {
       event.stopPropagation();
      if (el.className === 'school-block-child') {
          for (let i = 0; i < el.parentElement.childElementCount; i++) {
             el.parentElement.children[i].classList.add('disabled')
          }
          el.classList.remove('disabled')
          el.classList.add('active')
      } else if (el.className === 'school-block-child disabled') {
         for (let i = 0; i < el.parentElement.childElementCount; i++) {
            el.parentElement.children[i].classList.add('disabled')
            el.parentElement.children[i].classList.remove('active')
         }
         el.classList.remove('disabled')
         el.classList.add('active')
      }else {
         for (let i = 0; i < el.parentElement.childElementCount; i++) {
            el.parentElement.children[i].classList.remove('disabled')
         }
         el.classList.remove('disabled')
         el.classList.remove('active')
      }
   })
   
})
    
    

    function clickRadio(criteriaId, indexId, ball) {
        if (ball == 0) {
            $("input[name = 'criteriaIndexId_" + indexId + "'][type='checkbox']").each(function () {
                $(this).prop("checked", false);
            });
        }
        else {
            $("input[name = 'criteriaIndexId_" + indexId + "'][type='radio']").each(function () {
                if ($(this).attr('qw') == 0) {
                    $(this).prop('checked', false);
                }
            });
            if (criteriaId == 137) {
                $("#criteriaId_139").val(0);
                $("#criteriaId_140").val(0);
            }
        }
    }

    function SaveData(indexId) {
        var selected = [];
        $('.indexCriteriasInsp_' + indexId + ' :input[type="number"]').each(function () {
            selected.push($(this).attr('criteriaId') + ';' + $(this).prop("value"));
        });
        $("input[name='criteriaIndexId_" + indexId + "']:checked").each(function () {
            selected.push($(this).attr('criteriaId') + ';' + $(this).prop("value"));
        });
        $.ajax({
            type: "POST",
            url: "/Admin/SaveIndex/",
            data: { indexId: indexId, criteriaValues: selected },
            success: function (result) {
                if (result == true) {
                    toastr.success("Maʼlumotlar saqlandi!", "", {
                        "timeOut": "2500",
                        "extendedTImeout": "0"
                    });
                    $('.indexCriterias_' + indexId + ' :input[type="number"]').each(function () {
                        if ($(this).attr('criteriaId') == 186 || $(this).attr('criteriaId') == 188 || $(this).attr('criteriaId') == 190) {
                            $("#criteriaId_186").val($(this).prop("value"));
                            $("#criteriaId_188").val($(this).prop("value"));
                            $("#criteriaId_190").val($(this).prop("value"));
                        }
                        if ($(this).attr('criteriaId') == 154 || $(this).attr('criteriaId') == 160 || $(this).attr('criteriaId') == 167) {
                            $("#criteriaId_154").val($(this).prop("value"));
                            $("#criteriaId_160").val($(this).prop("value"));
                            $("#criteriaId_167").val($(this).prop("value"));
                        }
                        if ($(this).attr('criteriaId') == 181 || $(this).attr('criteriaId') == 209) {
                            $("#criteriaId_181").val($(this).prop("value"));
                            $("#criteriaId_209").val($(this).prop("value"));
                        }
                        if ($(this).attr('criteriaId') == 149 || $(this).attr('criteriaId') == 179) {
                            $("#criteriaId_149").val($(this).prop("value"));
                            $("#criteriaId_179").val($(this).prop("value"));
                        }
                        if ($(this).attr('criteriaId') == 94 || $(this).attr('criteriaId') == 102) {
                            $("#criteriaId_94").val($(this).prop("value"));
                            $("#criteriaId_102").val($(this).prop("value"));
                        }
                        if ($(this).attr('criteriaId') == 106 || $(this).attr('criteriaId') == 110 || $(this).attr('criteriaId') == 148 || $(this).attr('criteriaId') == 168 || $(this).attr('criteriaId') == 170 || $(this).attr('criteriaId') == 177 || $(this).attr('criteriaId') == 271) {
                            $("#criteriaId_106").val($(this).prop("value"));
                            $("#criteriaId_110").val($(this).prop("value"));
                            $("#criteriaId_148").val($(this).prop("value"));
                            $("#criteriaId_168").val($(this).prop("value"));
                            $("#criteriaId_170").val($(this).prop("value"));
                            $("#criteriaId_177").val($(this).prop("value"));
                            $("#criteriaId_271").val($(this).prop("value"));
                        }
                    });
                }
                else {
                    toastr.warning("Maʼlumotlar saqlanmadi!", "Yana bir bor urinib ko'ring", {
                        "timeOut": "2500",
                        "extendedTImeout": "0"
                    });
                }
            }
        })
    }

    function Reset(indexId) {

        var r = confirm("@Html.Raw(Localization.GetTranslate("delete_warning_text", lang))");
        if (r == true) {
            $('.indexCriteriasInsp_' + indexId + ' :input').each(function () {
                $(this).prop("checked", false);
                $(this).prop("value", "");
            });
        } else {

        }
    }

    $(".readonly").on('keydown paste focus mousedown', function (e) {
        if (e.keyCode != 9) // ignore tab
            e.preventDefault();
    });

   
</script>

